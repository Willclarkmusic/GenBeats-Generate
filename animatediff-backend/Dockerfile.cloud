# Optimized Dockerfile for Google Cloud Run with GPU
# Multi-stage build for smaller image size and faster cold starts

# Stage 1: Model download stage (cached separately)
FROM nvidia/cuda:11.8-devel-ubuntu22.04 as model-downloader

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV MODEL_CACHE_DIR=/models
ENV HF_HOME=/models
ENV TORCH_HOME=/models

# Install Python and dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    git \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3.10 /usr/bin/python && \
    pip install --upgrade pip

# Install minimal requirements for model download
RUN pip install --no-cache-dir \
    torch==2.1.0 \
    transformers \
    diffusers==0.25.0 \
    huggingface-hub \
    safetensors

# Create model directory
WORKDIR /app
RUN mkdir -p /models

# Copy and run model download script
COPY scripts/download_models.py scripts/
RUN python scripts/download_models.py || echo "Model download completed with warnings"

# Stage 2: Production runtime
FROM nvidia/cuda:11.8-runtime-ubuntu22.04 as production

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8080
ENV HOST=0.0.0.0

# Cloud Run specific environment variables
ENV MODEL_CACHE_DIR=/models
ENV OUTPUT_DIR=/tmp/outputs
ENV TORCH_HOME=/models
ENV HF_HOME=/models
ENV TRANSFORMERS_CACHE=/models
ENV DIFFUSERS_CACHE=/models

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    ffmpeg \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0-0 \
    libgl1-mesa-glx \
    curl \
    && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3.10 /usr/bin/python && \
    pip install --upgrade pip

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy models from downloader stage
COPY --from=model-downloader /models /models

# Copy application code
COPY app/ ./app/
COPY scripts/ ./scripts/

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash --uid 1000 appuser && \
    mkdir -p /tmp/outputs && \
    chown -R appuser:appuser /app /tmp/outputs /models

# Switch to non-root user
USER appuser

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Cloud Run requires listening on $PORT
CMD exec python -m uvicorn app.main:app --host $HOST --port $PORT --workers 1